apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
}

group = 'org.typesense'
version = '0.1.3-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    archiveBaseName = 'typesense-java'
}

javadoc {
    source = sourceSets.main.allJava
}
javadoc.options.addStringOption('Xdoclint:none', '-quiet')

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task install(dependsOn: ['publishToMavenLocal', 'publish']) {
    println "package installed with version $version"
}

def codeartifactToken = "aws codeartifact get-authorization-token --domain beatstars --domain-owner 210298337781 --query authorizationToken --output text".execute().text

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url 'https://beatstars-210298337781.d.codeartifact.us-east-1.amazonaws.com/maven/releases/'
            credentials {
                username "aws"
                password codeartifactToken
            }
        }
    }
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests (assumes running Docker image or local server)'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    shouldRunAfter test
}

check.dependsOn integrationTest

dependencies {
    implementation "javax.xml.bind:jaxb-api:2.3.1"
    implementation "org.glassfish.jersey.core:jersey-client:2.34"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:2.34"
    implementation "org.glassfish.jersey.inject:jersey-hk2:2.34"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "org.junit.jupiter:junit-jupiter:5.7.0"
    implementation "junit:junit:3.8.2"
    implementation "io.swagger.core.v3:swagger-annotations:2.0.0"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testImplementation "junit:junit:4.12"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    integrationTestImplementation "junit:junit:4.12"
    integrationTestImplementation "org.hamcrest:hamcrest-all:1.3"
}
